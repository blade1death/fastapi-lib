stages:
  # - build
  - deploy

# before_script:
  # - apt install vault

# build-job:
#   stage: build
#   variables:
#     IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker build -t $IMAGE_TAG .
#     - docker push $IMAGE_TAG

deploy-job:
  stage: deploy
  tags:
    # - lab 
    - k8s
  script:
    - neofetch
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add curl jq vault
    # - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=${VAULT_ROLE} jwt=)"
    - vault login --token $VAULT_TOKEN $VAULT_ADDRESS
    - export SUPABASE_URL=$(vault kv get --field=SUPABASE_URL kv/supabase)
    - export SUPABASE_KEY=$(vault kv get --field=SUPABASE_KEY kv/supabase)
 
    - docker compose up -d
    # - docker rm container-do-5-libcor
    # - docker run --name container-do-5-libcor -p 30065:80 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
